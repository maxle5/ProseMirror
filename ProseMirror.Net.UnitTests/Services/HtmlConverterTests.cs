using FluentAssertions;
using ProseMirror.Net.Services;
using Xunit;

namespace ProseMirror.Net.UnitTests.Services
{
    public class HtmlConverterTests
    {
        private const string _expectedJson = "{\"type\":\"doc\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":1,\"textAlign\":\"left\"},\"content\":[{\"text\":\"A heading\",\"type\":\"text\"}]},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"T\",\"type\":\"text\"},{\"text\":\"his is \",\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}]},{\"text\":\"some text. \",\"type\":\"text\"},{\"text\":\"with underline text.\",\"type\":\"text\",\"marks\":[{\"type\":\"underline\"}]},{\"text\":\" -\",\"type\":\"text\"},{\"text\":\" \",\"type\":\"text\",\"marks\":[{\"type\":\"textStyle\",\"attrs\":{\"color\":\"#0d5bd9\"}}]},{\"text\":\"w\",\"type\":\"text\",\"marks\":[{\"type\":\"italic\"},{\"type\":\"textStyle\",\"attrs\":{\"color\":\"#0d5bd9\"}}]},{\"text\":\"ith color\",\"type\":\"text\",\"marks\":[{\"type\":\"bold\"},{\"type\":\"italic\"},{\"type\":\"textStyle\",\"attrs\":{\"color\":\"#0d5bd9\"}}]}]},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"center\"},\"content\":[{\"text\":\"center alignment \",\"type\":\"text\",\"marks\":[{\"type\":\"textStyle\",\"attrs\":{\"color\":\"#000000\"}}]}]},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"center\"}},{\"type\":\"orderedList\",\"attrs\":{\"start\":1},\"content\":[{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"an ordered list\",\"type\":\"text\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"item2 \",\"type\":\"text\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"item3\",\"type\":\"text\"}]}]}]},{\"type\":\"horizontalRule\"},{\"type\":\"bulletList\",\"content\":[{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"item 1\",\"type\":\"text\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"item 2\",\"type\":\"text\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"item 3\",\"type\":\"text\"}]}]}]},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Todo:\",\"type\":\"text\"}]},{\"type\":\"bulletList\",\"content\":[{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Convert RTF to Html \",\"type\":\"text\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Convert Html to Prosemirror\",\"type\":\"text\"}]}]}]},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"blockquote\",\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"some quoted text\",\"type\":\"text\"}]}]},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"a hyperlink to google\",\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"target\":\"_blank\",\"href\":\"https://google.ca\"}}]}]},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"image\",\"attrs\":{\"alt\":null,\"src\":\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/dog-puppy-on-garden-royalty-free-image-1586966191.jpg?crop=1.00xw:0.669xh;0,0.190xh&amp;resize=1200:*\",\"title\":null,\"width\":256}},{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"}},{\"type\":\"table\",\"content\":[{\"type\":\"tableRow\",\"content\":[{\"type\":\"tableHeader\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"First Name\",\"type\":\"text\"}]}]},{\"type\":\"tableHeader\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Last Name\",\"type\":\"text\"}]}]}]},{\"type\":\"tableRow\",\"content\":[{\"type\":\"tableCell\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Max\",\"type\":\"text\"}]}]},{\"type\":\"tableCell\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Lefebvre\",\"type\":\"text\"}]}]}]},{\"type\":\"tableRow\",\"content\":[{\"type\":\"tableCell\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Luc\",\"type\":\"text\"}]}]},{\"type\":\"tableCell\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Lefebvre\",\"type\":\"text\"}]}]}]},{\"type\":\"tableRow\",\"content\":[{\"type\":\"tableCell\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Liam\",\"type\":\"text\"}]}]},{\"type\":\"tableCell\",\"attrs\":{\"colspan\":1,\"colwidth\":[100],\"rowspan\":1},\"content\":[{\"type\":\"paragraph\",\"attrs\":{\"textAlign\":\"left\"},\"content\":[{\"text\":\"Lefebvre\",\"type\":\"text\"}]}]}]}]}]}";

        [Fact]
        public void Convert_ShouldReturnProseMirror_WhenValidArguments()
        {
            // arrange
            var converter = new HtmlConverter();
            const string html = "<html><head><meta charset='utf-8'><meta http-equiv='X-UA-Compatible' content='IE=edge'><title>Test Page</title></head><body><h1>A heading</h1><p></p><p>T<strong>his is </strong>some text. <u>with underline text.</u> -<span style='color: #0d5bd9'> </span><em><span style='color: #0d5bd9'>w</span></em><strong><em><span style='color: #0d5bd9'>ith color</span></em></strong></p><p></p><p></p><p style='text-align: center'><span style='color: #000000'>center alignment </span></p><p style='text-align: center'></p><ol><li><p>an ordered list</p></li><li><p>item2 </p></li><li><p>item3</p></li></ol><hr><ul><li><p>item 1</p></li><li><p>item 2</p></li><li><p>item 3</p></li></ul><p></p><p>Todo:</p><ul data-type='taskList'><li data-checked='false' data-type='taskItem'><label><input type='checkbox'><span></span></label><div><p>Convert RTF to Html </p></div></li><li data-checked='false' data-type='taskItem'><label><input type='checkbox'><span></span></label><div><p>Convert Html to Prosemirror</p></div></li></ul><p></p><blockquote><p>some quoted text</p></blockquote><p></p><p><a target='_blank' rel='noopener noreferrer nofollow' href='https://google.ca'>a hyperlink to google</a></p><p></p><img src='https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/dog-puppy-on-garden-royalty-free-image-1586966191.jpg?crop=1.00xw:0.669xh;0,0.190xh&amp;resize=1200:*' width='256'><p></p><table><tbody><tr><th colspan='1' rowspan='1' colwidth='100'><p>First Name</p></th><th colspan='1' rowspan='1' colwidth='100'><p>Last Name</p></th></tr><tr><td colspan='1' rowspan='1' colwidth='100'><p>Max</p></td><td colspan='1' rowspan='1' colwidth='100'><p>Lefebvre</p></td></tr><tr><td colspan='1' rowspan='1' colwidth='100'><p>Luc</p></td><td colspan='1' rowspan='1' colwidth='100'><p>Lefebvre</p></td></tr><tr><td colspan='1' rowspan='1' colwidth='100'><p>Liam</p></td><td colspan='1' rowspan='1' colwidth='100'><p>Lefebvre</p></td></tr></tbody></table></body></html>";

            // act
            var obj = converter.Convert(html);
            var json = ProseMirrorConvert.SerializeToJson(obj);

            // assert
            obj.Should().NotBeNull();
            json.Should().Be(_expectedJson);
        }
    }
}